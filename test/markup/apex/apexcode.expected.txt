<span class="hljs-comment">/**
 * <span class="hljs-doctag">@author </span>John Smith
 */</span>
<span class="hljs-annotation"><span class="hljs-meta annotations">@IsTest</span><span class="hljs-punctuation">(</span><span class="hljs-meta keyword">Seealldata</span><span class="hljs-operator">=</span><span class="hljs-literal">true</span><span class="hljs-punctuation end">)</span></span>
<span class="hljs-keyword">public</span> <span class="hljs-keyword">with sharing</span> <span class="hljs-class-declaration"><span class="hljs-keyword">class</span> <span class="hljs-title class_">L2Char</span> <span class="hljs-keyword">implements</span> <span class="hljs-built_in">Database</span>.<span class="hljs-title class_ inherited__">batchable</span> <span class="hljs-punctuation">{</span></span>
  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">ERROR</span> <span class="hljs-operator">=</span> <span class="hljs-number">0x0001</span><span class="hljs-punctuation">;</span>

  <span class="hljs-annotation"><span class="hljs-meta annotations">@InvocableApex</span><span class="hljs-punctuation">(</span><span class="hljs-meta keyword">label</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;my invocable&#x27;</span><span class="hljs-punctuation end">)</span></span>
  <span class="hljs-keyword">public</span> <span class="hljs-type">void</span> moveTo<span class="hljs-punctuation">(</span>
    <span class="hljs-type">integer</span> x<span class="hljs-punctuation">,</span> 
    <span class="hljs-type">integer</span> y<span class="hljs-punctuation">,</span> 
    <span class="hljs-type">integer</span> z
  <span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>
    
    
    <span class="hljs-type">Account</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> <span class="hljs-instantiate"><span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">Account</span><span class="hljs-params"><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span></span></span><span class="hljs-punctuation">;</span>
    a.<span class="hljs-type">Custom__c</span> <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;stringvalue&#x27;</span><span class="hljs-punctuation">;</span>
    <span class="hljs-built_in">insert</span> <span class="hljs-variable">a</span><span class="hljs-punctuation">;</span>
    <span class="hljs-type">Boolean</span> <span class="hljs-variable">ai</span> <span class="hljs-operator">=</span> <span class="hljs-punctuation">(</span><span class="hljs-type">Boolean</span><span class="hljs-punctuation">)</span> <span class="hljs-variable">false</span><span class="hljs-punctuation">;</span>
    <span class="hljs-built_in">System</span>.<span class="hljs-title function_ invoked__">debug</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;Should not be called&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">;</span>
    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator"> &gt; </span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span> <span class="hljs-comment">// wtf!?
</span>      <span class="hljs-built_in">Database</span>.<span class="hljs-title function_ invoked__">insert</span><span class="hljs-punctuation">(</span>myAccounts<span class="hljs-punctuation">)</span><span class="hljs-punctuation">;</span>
    <span class="hljs-punctuation">}</span>
  <span class="hljs-punctuation">}</span>
<span class="hljs-punctuation">}</span>

<span class="hljs-meta SOLO">@TestSetup</span>
<span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">void</span> makeData<span class="hljs-punctuation">(</span><span class="hljs-type">Boolean</span> a<span class="hljs-punctuation">)</span><span class="hljs-punctuation">{</span>
  <span class="hljs-type">Custom__c</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> <span class="hljs-instantiate"><span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">Custom__c</span><span class="hljs-params"><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span></span></span><span class="hljs-punctuation">;</span>
  
  <span class="hljs-keyword">for</span><span class="hljs-punctuation">(</span><span class="hljs-type">Account</span> <span class="hljs-variable">a</span><span class="hljs-punctuation"> :</span> acctLis ){
    ConnectApi.<span class="hljs-built_in">insert</span> <span class="hljs-variable">a</span><span class="hljs-punctuation">;</span>
  <span class="hljs-punctuation">}</span>
<span class="hljs-punctuation">}</span>

<span class="hljs-keyword">private</span> <span class="hljs-keyword">testMethod</span> <span class="hljs-type">void</span> testme<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">{</span>
  <span class="hljs-built_in">System</span>.<span class="hljs-title function_ invoked__">assert</span><span class="hljs-punctuation">(</span><span class="hljs-literal">true</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">;</span>
<span class="hljs-punctuation">}</span>

<span class="hljs-meta SOLO">@testVisible</span>
<span class="hljs-keyword">private</span> <span class="hljs-collection"><span class="hljs-type">List</span><span class="hljs-punctuation">&lt;</span><span class="hljs-type">SelectOption</span><span class="hljs-punctuation">&gt;</span></span> recordTypes <span class="hljs-punctuation">{</span> <span class="hljs-variable">get</span><span class="hljs-punctuation">;</span> <span class="hljs-keyword">private</span> <span class="hljs-variable">set</span><span class="hljs-punctuation">;</span> <span class="hljs-punctuation">}</span>

<span class="hljs-keyword">for</span><span class="hljs-punctuation">(</span><span class="hljs-type">Account</span> <span class="hljs-variable">a</span><span class="hljs-punctuation"> :</span> <span class="hljs-soql"><span class="hljs-punctuation">[</span><span class="hljs-keyword for soql">SELECT</span> Id <span class="hljs-from clause"><span class="hljs-keyword">FROM</span><span class="hljs-type"> Account</span></span> <span class="hljs-keyword">WHERE</span> LastModifiedDate <span class="hljs-operator">=</span> <span class="hljs-variable language_">LAST_N_DAYS</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span></span>){
  <span class="hljs-title class_">Assert</span>.<span class="hljs-title function_ invoke__">fail</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">;</span>
<span class="hljs-punctuation">}</span>

<span class="hljs-trigger_declaration"><span class="hljs-keyword">trigger</span> <span class="hljs-title class_">CTrig</span> <span class="hljs-operator">on</span> <span class="hljs-type">Custom__c</span> <span class="hljs-trigger_params"><span class="hljs-punctuation">(</span><span class="hljs-built_in">before insert</span><span class="hljs-punctuation">)</span></span></span><span class="hljs-punctuation">{</span>
  <span class="hljs-built_in">System</span>.<span class="hljs-title function_ invoked__">debug</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;inserting a record&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">;</span>
  <span class="hljs-built_in">upsert</span> <span class="hljs-variable">myRecord__c</span><span class="hljs-punctuation">;</span>
<span class="hljs-punctuation">}</span>