<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>repository</key>
	<dict>
		<key>annotation-declaration</key>
		<dict>
			<key>begin</key>
			<string>([@][_[:alpha:]]+)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.annotation.apex</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=\)|$)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.parenthesis.open.apex</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.parenthesis.close.apex</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#statement</string>
				</dict>
			</array>
		</dict>
		<key>argument-list</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.open.apex</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.close.apex</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#named-argument</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-comma</string>
				</dict>
			</array>
		</dict>
		<key>boolean-literal</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\btrue\b</string>
					<key>name</key>
					<string>constant.language.boolean.true.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\bfalse\</string>
					<key>name</key>
					<string>constant.language.boolean.false.apex</string>
				</dict>
			</array>
		</dict>
		<key>colon-expression</key>
		<dict>
			<key>match</key>
			<string>:</string>
			<key>name</key>
			<string>keyword.operator.conditional.colon.apex</string>
		</dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*(\*)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.apex</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.apex</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.apex</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^\s+)?(?=//)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.apex</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;!/)///(?!/)</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.apex</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=$)</string>
							<key>name</key>
							<string>comment.block.documentation.apex</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#xml-doc-comment</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;!/)//(?:(?!/)|(?=//))</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.apex</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=$)</string>
							<key>name</key>
							<string>comment.line.double-slash.apex</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>declarations</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type-declarations</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-semicolon</string>
				</dict>
			</array>
		</dict>
		<key>directives</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#punctuation-semicolon</string>
				</dict>
			</array>
		</dict>
		<key>expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#merge-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#throw-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#this-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#trigger-context-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#conditional-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#soql-query-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#object-creation-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#array-creation-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#invocation-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#member-access-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#element-access-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#cast-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parenthesized-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#initializer-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#identifier</string>
				</dict>
			</array>
		</dict>
		<key>expression-operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\*=|/=|%=|\+=|-=</string>
					<key>name</key>
					<string>keyword.operator.assignment.compound.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\&amp;=|\^=|&lt;&lt;=|&gt;&gt;=|\|=</string>
					<key>name</key>
					<string>keyword.operator.assignment.compound.bitwise.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;&lt;|&gt;&gt;</string>
					<key>name</key>
					<string>keyword.operator.bitwise.shift.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>==|!=</string>
					<key>name</key>
					<string>keyword.operator.comparison.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;=|&gt;=|&lt;|&gt;</string>
					<key>name</key>
					<string>keyword.operator.relational.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\!|&amp;&amp;|\|\|</string>
					<key>name</key>
					<string>keyword.operator.logical.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\&amp;|~|\^|\|</string>
					<key>name</key>
					<string>keyword.operator.bitwise.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\=</string>
					<key>name</key>
					<string>keyword.operator.assignment.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>--</string>
					<key>name</key>
					<string>keyword.operator.decrement.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\+\+</string>
					<key>name</key>
					<string>keyword.operator.increment.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%|\*|/|-|\+</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.apex</string>
				</dict>
			</array>
		</dict>
		<key>identifier</key>
		<dict>
			<key>match</key>
			<string>@?[_[:alpha:]][_[:alnum:]]*</string>
			<key>name</key>
			<string>variable.other.readwrite.apex</string>
		</dict>
		<key>javadoc-comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*(/\*\*)(?!/)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.apex</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.apex</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.javadoc.apex</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>@(deprecated|author|return|see|serial|since|version|usage|name|link)\b</string>
							<key>name</key>
							<string>keyword.other.documentation.javadoc.apex</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.documentation.javadoc.apex</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.variable.parameter.apex</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(@param)\s+(\S+)</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.documentation.javadoc.apex</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.type.class.apex</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(@(?:exception|throws))\s+(\S+)</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>string.quoted.single.apex</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(`([^`]+?)`)</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>literal</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#boolean-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#null-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numeric-literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-literal</string>
				</dict>
			</array>
		</dict>
		<key>named-argument</key>
		<dict>
			<key>begin</key>
			<string>(@?[_[:alpha:]][_[:alnum:]]*)\s*(:)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.variable.parameter.apex</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.colon.apex</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=(,|\)|\]))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>null-literal</key>
		<dict>
			<key>match</key>
			<string>(?&lt;!\.)\bnull\b</string>
			<key>name</key>
			<string>constant.language.null.apex</string>
		</dict>
		<key>numeric-literal</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(\d{4}\-\d{2}\-\d{2}T\d{2}\:\d{2}\:\d{2}(\.\d{1,3})?(\-|\+)\d{2}\:\d{2})\b</string>
					<key>name</key>
					<string>constant.numeric.datetime.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(\d{4}\-\d{2}\-\d{2}T\d{2}\:\d{2}\:\d{2}(\.\d{1,3})?(Z)?)\b</string>
					<key>name</key>
					<string>constant.numeric.datetime.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(\d{4}\-\d{2}\-\d{2})\b</string>
					<key>name</key>
					<string>constant.numeric.date.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b0(x|X)[0-9a-fA-F_]+(U|u|L|l|UL|Ul|uL|ul|LU|Lu|lU|lu)?\b</string>
					<key>name</key>
					<string>constant.numeric.hex.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b0(b|B)[01_]+(U|u|L|l|UL|Ul|uL|ul|LU|Lu|lU|lu)?\b</string>
					<key>name</key>
					<string>constant.numeric.binary.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b([0-9_]+)?\.[0-9_]+((e|E)[0-9]+)?(F|f|D|d|M|m)?\b</string>
					<key>name</key>
					<string>constant.numeric.decimal.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[0-9_]+(e|E)[0-9_]+(F|f|D|d|M|m)?\b</string>
					<key>name</key>
					<string>constant.numeric.decimal.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[0-9_]+(F|f|D|d|M|m)\b</string>
					<key>name</key>
					<string>constant.numeric.decimal.apex</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[0-9_]+(U|u|L|l|UL|Ul|uL|ul|LU|Lu|lU|lu)?\b</string>
					<key>name</key>
					<string>constant.numeric.decimal.apex</string>
				</dict>
			</array>
		</dict>
		<key>punctuation-accessor</key>
		<dict>
			<key>match</key>
			<string>\.</string>
			<key>name</key>
			<string>punctuation.accessor.apex</string>
		</dict>
		<key>punctuation-comma</key>
		<dict>
			<key>match</key>
			<string>,</string>
			<key>name</key>
			<string>punctuation.separator.comma.apex</string>
		</dict>
		<key>punctuation-semicolon</key>
		<dict>
			<key>match</key>
			<string>;</string>
			<key>name</key>
			<string>punctuation.terminator.statement.apex</string>
		</dict>
		<key>statement</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#while-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#do-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#for-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#switch-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#when-else-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#when-sobject-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#when-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#when-multiple-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#if-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#else-part</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#goto-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#return-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#break-or-continue-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#throw-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#try-statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#soql-query-expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#local-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-semicolon</string>
				</dict>
			</array>
		</dict>
		<key>string-character-escape</key>
		<dict>
			<key>match</key>
			<string>\\.</string>
			<key>name</key>
			<string>constant.character.escape.apex</string>
		</dict>
		<key>string-literal</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.apex</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\')|((?:[^\\\n])$)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.apex</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.newline.apex</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.apex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string-character-escape</string>
				</dict>
			</array>
		</dict>
		<key>type</key>
		<dict>
			<key>name</key>
			<string>meta.type.apex</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-builtin</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-arguments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-array-suffix</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type-nullable-suffix</string>
				</dict>
			</array>
		</dict>
		<key>type-arguments</key>
		<dict>
			<key>begin</key>
			<string>&lt;</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.typeparameters.begin.apex</string>
				</dict>
			</dict>
			<key>end</key>
			<string>&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.typeparameters.end.apex</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support-type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-comma</string>
				</dict>
			</array>
		</dict>
		<key>type-array-suffix</key>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.squarebracket.open.apex</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\]</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.squarebracket.close.apex</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#punctuation-comma</string>
				</dict>
			</array>
		</dict>
		<key>type-builtin</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.type.apex</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(Blob|Boolean|byte|Date|Datetime|Decimal|Double|ID|Integer|Long|Object|String|Time|void)\b</string>
		</dict>
		<key>type-declarations</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#javadoc-comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#annotation-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage-modifier</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sharing-modifier</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#enum-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interface-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#trigger-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation-semicolon</string>
				</dict>
			</array>
		</dict>
		<key>type-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.apex</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.accessor.apex</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(@?[_[:alpha:]][_[:alnum:]]*)\s*(\.)</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.accessor.apex</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.apex</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\.)\s*(@?[_[:alpha:]][_[:alnum:]]*)</string>
				</dict>
				<dict>
					<key>match</key>
					<string>@?[_[:alpha:]][_[:alnum:]]*</string>
					<key>name</key>
					<string>storage.type.apex</string>
				</dict>
			</array>
		</dict>
		<key>type-nullable-suffix</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.question-mark.apex</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\?</string>
		</dict>
	</dict>
</dict>
</plist>
